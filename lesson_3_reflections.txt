When would you want to use a remote repository rather than
keeping all your work local?

This could be useful in a scenario when the local workstation
is inaccessible, such as when on vacation. Keeping all your
work local has the downside that all of it can be lost pretty
easily, while remotes are more reliable.

Why might you want to always pull changes manually rather than
having Git automatically stay up-to-date with your remote
repository?

Suppose you are working on a new feature, which makes use of
some of the old code. Now, if someone else decides that the part
of code you were using is more or less useless and deletes that,
then if Git automatically pulls the changes, your work will
start showing unexpected errors. If you pull manually, you can
avoid a lot of headache.

Describe the differences between forks, clones, and branches.
When would you use one instead of another?

Fork is a clone of a repository on GitHub from GitHub. Clone is
a copy of a respository on a local machine. Branch is a commit
which relates to some other commit from master and then builds
upon it separately from master.

If we need to copy from GitHub to GitHub, we use forking. If
copying is to be done on local machine, cloning is used. If we
need to test features other than master, we use branching.

What is the benefit of having a copy of the last known state of
the remote stored locally?

When we have a copy of the last known state of the remote stored
locally, we have the last known commit remote repository had,
which git can use to compare to the changes in master locally.

How would you collaborate without using Git or GitHub? What
would be easier, and what would be harder?

Each case has its own merits depending upon the use cases. Using
git and github, we can collaborate by changing some of the code,
letting others check that change and then merge the master with
the change. This works for code, but solutions like google docs
work better with casual documents.

